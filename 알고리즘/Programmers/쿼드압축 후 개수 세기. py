'''
### numpy 사용 답안 ###
import numpy as np

def check(arr):
    tmp = arr.flatten()
    if 0 not in tmp or 1 not in tmp:
        return np.array([tmp[0]])
    else:
        return arr

def tree(arr, answer):
    if len(arr) == 1:
        if arr[0] == 1:
            answer[1] += 1
        else:
            answer[0] += 1
        return answer
    width, height = arr.shape
    next_width, next_height = width//2, height//2
    tree(check(arr[:next_height, :next_width]), answer)
    tree(check(arr[:next_height, next_width:]), answer)
    tree(check(arr[next_height:, :next_width]), answer)
    tree(check(arr[next_height:, next_width:]), answer)
    return answer
    
    

def solution(arr):
    arr = np.array(arr)
    answer = [0, 0]
    if len(check(arr)) == 1:
        answer[arr[0][0]] += 1
        return answer
    answer = tree(arr, answer)
    return answer
'''

def solution(arr):
    answer = [0, 0]

    def check(size, x, y):
        if size == 1:
            answer[arr[y][x]] += 1
            return
        else:
            first = arr[y][x]

            for dy in range(size):
                for dx in range(size):
                    if first != arr[y + dy][x + dx]:
                        check(size // 2, x, y)
                        check(size // 2, x + size // 2, y)
                        check(size // 2, x, y + size // 2)
                        check(size // 2, x + size // 2, y + size // 2)
                        return
            answer[first] += 1
    check(len(arr),0,0)


    return answer
